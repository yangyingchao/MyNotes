:PROPERTIES:
:ID:       6b9e39b7-4db5-421e-974c-b8f26144656d
:NOTER_DOCUMENT: https://stackoverflow.com/questions/33655700/github-api-fetch-issues-with-exceeds-rate-limit-prematurely
:NOTER_OPEN: eww
:END:
#+TITLE: Github API: Fetch issues with exceeds rate limit prematurely
#+AUTHOR: Yang,Ying-chao
#+DATE:   2024-05-11
#+OPTIONS:  ^:nil H:5 num:t toc:2 \n:nil ::t |:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+STARTUP:   oddeven lognotestate
#+SEQ_TODO: TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+LANGUAGE: en
#+TAGS:     noexport(n)
#+EXCLUDE_TAGS: noexport
#+FILETAGS: :gh:


* Q

I am building an app that fetches the issues and pull requests of over 1K github repos, like this.

#+begin_src text
$ curl -i "https://api.github.com/repos/user/repo/issues?state=closed"
#+end_src


My problem is that, after the initial 60 iterations I get a rate limit error:

#+begin_src json-ts
{
    "message": "API rate limit exceeded for xxx.xxx.xxx.xxx. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)",
    "documentation_url": "https://developer.github.com/v3/#rate-limiting"
}
#+end_src


The document says I can make upto 5000 requests using Authentication Which I registered an oauth for and obtained Client
ID and Client Secret tokens

https://api.github.com/repos/{repo.name}/issues?client_id=...&client_secret=...

Still the rate limit shows up only after about 60 requests.


* A

The public GitHub API requests are limited to 60 / hour / ip, like you observed. That's why you need authentication.

There are multiple ways to get authenticated when you use the GitHub APIs.

** Basic authentication

Basically, you provide the username and the password.

#+begin_src sh
curl -u your-username "https://api.github.com/repos/user/repo/issues?state=closed"
#+end_src

This will prompt you for entering the password.

If you dont want to use the password, you can use a [[https://docs.github.com/en/rest/authentication/authenticating-to-the-rest-api?apiVersion=2022-11-28][personal token]]:

#+begin_src sh
curl -u username:token "https://api.github.com/repos/user/repo/issues?state=closed"
#+end_src


** Using personal access tokens

This is my favorite, but make sure you don't share the token code with others. To generate a new token, open this page,
and you will create the token.

Then you can use it like this:

#+begin_src sh
curl "https://api.github.com/repos/user/repo/issues?state=closed&access_token=token"
#+end_src

(replace the token snippet at the end of the url with your token code)

 â—Ž OAuth

If you want to implement authentication for other users, you should use OAuth. The docs are good in this direction.
