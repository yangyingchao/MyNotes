:PROPERTIES:
:ID:       b4922594-861b-4ed8-b9b8-d4c436a0c0c0
:NOTER_OPEN: browse-url
:END:
#+TITLE: All Major C++17 Features You Should Know
#+AUTHOR: Yang,Ying-chao
#+EMAIL:  yang.yingchao@qq.com
#+OPTIONS:  ^:nil _:nil H:7 num:t toc:2 \n:nil ::t |:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc author:nil
#+STARTUP:  align nodlcheck oddeven lognotestate 
#+SEQ_TODO: TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:     noexport(n)
#+LANGUAGE: en
#+EXCLUDE_TAGS: noexport
#+FILETAGS: :cpp:c++17:

#+NOTER_DOCUMENT: https://www.cppstories.com/2017/01/cpp17features/


* [[https://www.cppstories.com/2017/01/cpp17features/#language-features][Language Features]]
:PROPERTIES:
:NOTER_DOCUMENT: https://www.cppstories.com/2017/01/cpp17features/
:NOTER_PAGE: 4374
:CUSTOM_ID: h:5d1ffb1b-4df4-4e37-82c6-58427dc149e4
:END:


** [[https://www.cppstories.com/2017/01/cpp17features/#new-auto-rules-for-direct-list-initialization][New auto rules for direct-list-initialization]]
:PROPERTIES:
:NOTER_DOCUMENT: https://www.cppstories.com/2017/01/cpp17features/
:NOTER_PAGE: 4437
:CUSTOM_ID: h:771f9d85-5896-4a45-8ce1-1ab7861af069
:END:


** [[https://www.cppstories.com/2017/01/cpp17features/#static_assert-with-no-message][static_assert with no message]]
:PROPERTIES:
:NOTER_DOCUMENT: https://www.cppstories.com/2017/01/cpp17features/
:NOTER_PAGE: 5241
:CUSTOM_ID: h:ae9aa599-ee2e-4fbf-8ac2-808e6666c693
:END:

=static_assert()= 可以不用再写 message 了， 类似 C =assert=


** [[https://www.cppstories.com/2017/01/cpp17features/#typename-in-a-template-template-parameter][typename in a template template parameter]]
:PROPERTIES:
:NOTER_DOCUMENT: https://www.cppstories.com/2017/01/cpp17features/
:NOTER_PAGE: 5616
:CUSTOM_ID: h:791c735d-4e0a-4e1b-bea9-592ef14dcdf6
:END:

模板中以前只能用 =class= 来声明类型，现在可以用 =typename= 了

#+BEGIN_SRC c++ -r
template <template <typename...> typename Container>
//            used to be invalid ^^^^^^^^
struct foo;

foo<std::vector> my_foo;
#+END_SRC


** [[https://www.cppstories.com/2017/01/cpp17features/#nested-namespace-definition][Nested namespace definition]]
:PROPERTIES:
:NOTER_DOCUMENT: https://www.cppstories.com/2017/01/cpp17features/
:NOTER_PAGE: 6219
:CUSTOM_ID: h:e5f75c48-e26e-445d-91cd-cb819d8017c4
:END:

Allows to write:

#+BEGIN_SRC c++ -r
namespace A::B::C {
   // ...
}

Rather than:

namespace A {
    namespace B {
        namespace C {
            // ...
        }
    }
}

#+END_SRC
