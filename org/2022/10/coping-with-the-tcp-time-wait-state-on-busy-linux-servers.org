:PROPERTIES:
:ID:       b6048b9a-dc29-43ef-9eea-68a0cf3c917c
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:END:
#+TITLE: Coping with the TCP TIME-WAIT state on busy Linux servers
#+AUTHOR: Yang,Ying-chao
#+EMAIL:  yang.yingchao@qq.com
#+OPTIONS:  ^:nil _:nil H:7 num:t toc:2 \n:nil ::t |:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc author:nil
#+STARTUP:   oddeven lognotestate 
#+SEQ_TODO: TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:     noexport(n)
#+LANGUAGE: en
#+EXCLUDE_TAGS: noexport
#+FILETAGS: :time_wait:tcp:linux:


* [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary#:~:text=TL;DR][TL;DR]]
:PROPERTIES:
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:NOTER_PAGE: 169
:CUSTOM_ID: h:871f360d-063e-46ff-9c0a-18322d91be4c
:END:

- 不用启用 =net.ipv4.tcp_tw_recycle= ， 该选项已在 Linux4.12 废弃
- 多数情况下， =TIME-WAIT= 状态的 socket 无害


* [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#about-the-time-wait-state][About the TIME-WAIT state]]
:PROPERTIES:
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:NOTER_PAGE: 1749
:CUSTOM_ID: h:096c1a95-20d2-4ac1-b6f2-fac0a6b2e233
:END:


** [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary#:~:text=TCP%20state%20diagram][TCP state diagram]]
:PROPERTIES:
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:NOTER_PAGE: 2019
:CUSTOM_ID: h:0a4a593c-1032-4cbd-bb0d-89c43f6348c0
:END:

#+CAPTION:
#+NAME: fig:tcp-state-diagram-v2
#+DOWNLOADED: https://d2pzklc15kok91.cloudfront.net/images/tcp/tcp-state-diagram-v2.svg @ 2022-10-24 17:28:45
#+attr_html: :width 727px
#+attr_org: :width 727px
[[file:images/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/tcp-state-diagram-v2.svg]]


#+NAME: fig:tcpfsm
#+DOWNLOADED: http://tcpipguide.com/free/diagrams/tcpfsm.png @ 2022-10-25 09:40:27
#+attr_html: :width 562px
#+attr_org: :width 562px
[[file:images/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/tcpfsm.png]]

http://tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm

- 只有主动关闭连接一端会进入 =TIME-WAIT= 状态
- 另外一端通常会走另外一条路径，快速关闭连接
- 可以通过命令 =ss -tan=  来查看状态
  #+BEGIN_SRC console -r
    $ ss -tan | head -5
    LISTEN     0  511             *:80              *:*
    SYN-RECV   0  0     192.0.2.145:80    203.0.113.5:35449
    SYN-RECV   0  0     192.0.2.145:80   203.0.113.27:53599
    ESTAB      0  0     192.0.2.145:80   203.0.113.27:33605
    TIME-WAIT  0  0     192.0.2.145:80   203.0.113.47:50685
  #+END_SRC


** [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#purpose][Purpose]]
:PROPERTIES:
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:NOTER_PAGE: 2564
:CUSTOM_ID: h:761d930e-9258-42e1-8792-75aafd6a4642
:END:


* [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#problems][Problems]]
:PROPERTIES:
:CUSTOM_ID: h:90387b11-15a7-43e6-9d48-031298e3c45a
:END:

* [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#other-solutions][Other solutions]]
:PROPERTIES:
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:NOTER_PAGE: 13895
:CUSTOM_ID: h:fe22875f-822e-470b-a2cf-8ca13e804920
:END:

** [[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#netipv4tcp_tw_reuse][net.ipv4.tcp_tw_reuse]]
:PROPERTIES:
:NOTER_DOCUMENT: https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary
:NOTER_PAGE: 15787
:CUSTOM_ID: h:27aabe51-3f44-40ac-a21e-f9de9dbb9254
:END:


* Another
:PROPERTIES:
:NOTER_DOCUMENT: https://draveness.me/whys-the-design-tcp-time-wait/
:NOTER_PAGE: 11
:CUSTOM_ID: h:27aabe51-3f44-40ac-a21e-f9de9dbb9254
:END:

* [[https://draveness.me/whys-the-design-tcp-time-wait/#:~:text=总结][总结]]
:PROPERTIES:
:NOTER_DOCUMENT: https://draveness.me/whys-the-design-tcp-time-wait/
:CUSTOM_ID: h:d0c1d159-905d-4598-a15c-ffb80f1d452d
:END:

在某些场景下，60 秒的等待销毁时间确实是难以接受的，例如：高并发的压力测试。当我们通过并发请
求测试远程服务的吞吐量和延迟时，本地就可能产生大量处于 TIME_WAIT 状态的 TCP 连接，在 macOS
上可以使用如下所示的命令查看活跃的连接：
